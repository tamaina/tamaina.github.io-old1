{"options":"","timestamp":"2017-12-13T14:08:13.611Z","pages":[{"attributes":{"title":"404 Not Found","description":"お探しのページはありませんでした。","layout":"article","date":"2100-12-26T09:13:20.778Z","published":true,"draft":false},"body":"\np (ページが)ないです\n\na(href=`${site.url.path}/`) トップページへ","meta":{"src":{"root":"","dir":"pages","base":"404.pug","ext":".pug","name":"404","subdir":""},"md5":"16373b01c4af2da0986dbdf1c0b413b4","sha384":"OAZAV1YnEdrl6phd0dJT1rFBgkKTe3rYhCEbccJV4nzcrm/xoS5SN2OmfjsZkTZk","mtime":"2017-10-20T16:22:22.001Z","birthtime":"2100-12-26T09:13:20.778Z","thumbnail":null,"permalink":"/404/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":2814749767140380,"size":235,"atimeMs":1503084921010,"mtimeMs":1508516542000.563,"ctimeMs":1508516542000.563,"birthtimeMs":1503084921010.212,"atime":"2017-08-18T19:35:21.010Z","mtime":"2017-10-20T16:22:22.001Z","ctime":"2017-10-20T16:22:22.001Z","birthtime":"2017-08-18T19:35:21.010Z"}},{"attributes":{"title":"私について","description":"aqz、もしくはtamainaについてです。虚勢ぐらいは張って生きていきたいらしいです。私は巨乳派。","layout":"blog","date":"2100-12-26T09:13:20.778Z","thumbnail":"/files/blog/rail_eyecatch.jpeg","amp":true,"published":true,"draft":false,"tags":["自己紹介"],"categories":["aqz"]},"body":"\n## どうも、こんにちは…\n\n**tamaina**こと**aqz**です。\n\n名前が2つあって2つとも意味不明ですが、どちらも気に入っているので両方使っています。\n\n両方とも小文字で始まるのが正式です。\n\naqzはakyusの省略形で、アキューズと読みますが、アキウスと書きます。  \ntamainaはそのままローマ字読みすればいいみたいです。\n\n年齢は永遠の17歳。\n\nとりあえずそんなところで。\n\n## このサイトについて\n\n半分は自分の場所が欲しかったためですが、半分はサイトビルダー開発の実地実験のためでもあります。\n\npjaxだったりブログにはAMPが整備してあったりと無駄な機能満載です。\n\n## 作ったもの\n\nどれも中途半端なものばかりですが…\n\n- [**Chirno**](https://chirno.tmin.xyz/)\n  * Bootstrapを\"日本語化\"するプロジェクトです。\n- [**Kogasa**](https://github.com/tamaina/kogasa)\n  * HTMLのGUIで画像をちょこっと編集できます。Electron製。\n  * もともとwaifu2xを動かすためのものでしたが、他の変換にも利用できます。\n    * 拡大(waifu2x)/縮小(シャープネス設定可)\n    * ノイズ除去(waifu2x)\n    * 形式変換\n  * なぜか処理をすべて同期で書いているので、処理中は死にます。\n    * 書き直す計画が進行中です。\n- [**maqz**](/maqz/)\n  * 今見てるこれ。\n  * 静的サイトでばりばり大量のデータを扱うために生まれたもの。\n- [**The Japanese Web Fonts**](https://tmin.xyz/The-Japanese-Web-Fonts/#!index.md)\n  * 日本語ウェブフォントにハマった時期に作ったもの。\n  * 角ゴシックのみに対応しています。","meta":{"src":{"root":"","dir":"pages/blog","base":"about_me.md","ext":".md","name":"about_me","subdir":"blog"},"md5":"cc92db7ccdb65a6e82c3fb6bfa406edb","sha384":"vdQnswO+8yCdgrNmK5mmVraQoPSgjaUWQh6WdztY4PAxGoHN3rMSbCAS7De8VIb8","mtime":"2017-11-26T13:02:47.540Z","birthtime":"2100-12-26T09:13:20.778Z","thumbnail":null,"permalink":"/blog/about_me/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":3377699720585556,"size":2130,"atimeMs":1504032496951,"mtimeMs":1511701367539.8196,"ctimeMs":1511701367539.8196,"birthtimeMs":1503673725462.954,"atime":"2017-08-29T18:48:16.951Z","mtime":"2017-11-26T13:02:47.540Z","ctime":"2017-11-26T13:02:47.540Z","birthtime":"2017-08-25T15:08:45.463Z"}},{"attributes":{"title":"bootstrap v4について","description":"bootstrapは、言わずと知れたフレームワーク。v4は、いよいよbetaになりました。","layout":"blog","amp":true,"published":true,"draft":false,"tags":["bootstrap"],"categories":["web"]},"body":"\n長い年月をかけて、bootstrap v4がいよいよbetaになりました。待ち飽きたと思います。\n\nもう[bootstrapのサイト](//getbootstrap.com)はbootstrap v3から差し替わっています。\n\nついこの前まではv4-alpha.6を利用していましたが、この新しいサイトはbetaを利用しています。\n\n## 基本的な使い方\n\n- 置くだけでも適当に設定してくれる\n- `.container`で文書に適切な幅にする\n- **navbar**をパパっと作る\n  * betaから`.sticky-top`が使える！\n- `.row`, `.col-**-n`で簡単幅指定\n- リンクに`.btn.btn-link`などを適用してスマホでも押しやすくする\n- 多種多様なコンポーネントを使ってデザインをまとめる\n\n## alphaからbetaになって変わったこと\n\n- popper.jsを利用するようになった\n  * ドロップダウンが面白いことになってます。\n- ビルドの仕方が変わった\n  * alphaまでのビルド方法は全く通用しません。","meta":{"src":{"root":"","dir":"pages/blog","base":"bootstrap-v4-beta.md","ext":".md","name":"bootstrap-v4-beta","subdir":"blog"},"md5":"38eadc2112ea9f2b3186896257b7fad5","sha384":"OzSlCgpMHES+YkA4sow/9AXasN/VYMGZbjHSRCQUW6Su7LN7U9SsYZtIV60tSU46","mtime":"2017-11-26T13:04:17.505Z","birthtime":"2017-08-21T07:27:54.680Z","thumbnail":null,"permalink":"/blog/bootstrap-v4-beta/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":3377699720584995,"size":1252,"atimeMs":1503326972617.0002,"mtimeMs":1511701457505.496,"ctimeMs":1511701457505.496,"birthtimeMs":1503300474679.8806,"atime":"2017-08-21T14:49:32.617Z","mtime":"2017-11-26T13:04:17.505Z","ctime":"2017-11-26T13:04:17.505Z","birthtime":"2017-08-21T07:27:54.680Z"}},{"attributes":{"title":"各高校の文化祭のWebサイトまとめ 2017","description":"気になってまとめてしまった。あまりいい記事ではないし、情報も古いですが、一応アーカイブとして。maqzシステムを利用して、来年はデータベースとして紹介したいとかなんとか。","layout":"blog","amp":true,"published":true,"draft":false,"tags":["文化祭"],"categories":["学校"]},"body":"\n**え、これ、毎年追うの？？**\n\n更新日時表記って便利ですね。それから更新してないってことだもん。\n\n## 記事閲覧上の注意\n\nとりあえず、余計なことが書いてあるし見ない方が無難かと思います。あと見にくい、長い。\n\n来年は改善すると豪語しています。\n\n## まとめと感想\n\n相当な量あるので先に見解を述べます。\n\n多くが新しいWeb標準に準拠した非常に見やすいサイトです。\n\nご想像の通り、私立男子校が多いです。**共学裏山。**\n\n検索が悪いだけかもですが、案外高専はありませんでした。\n\nそもそも公開されている学園祭自体少ないというのもありますが。\n\n\n## 収集条件\n- 公立・私立関係なく、全ての高等学校及び工業高等専門学校の文化祭のウェブサイトを対象にします。\n  * 中学じゃ作っとらんだろとは思いますが、見つけたら掲載します。\n- 順不同です。\n- 筆者の検索能力には限界があります。どしどしコメントをお寄せください。\n- 高校のホームページに含まれないサイトです。独立したサイトを対象とします。\n- **毎年開催が基準**です。隔年/3年毎の開催は、見出しの最後にその旨を表示します。\n- 記事の最後に利用サーバーを記載しています。IPアドレスで判別している為、多少のズレが発生するかもしれないです。\n  * 同じサーバーでもOSが選択できる場合、OSを括弧書きで後ろに付加します。\n  * IP検索にはドメイン名から[IPひろば](http://www.iphiroba.jp)を利用します。\n  * 私立のドメインの下に立っている場合、法人契約をしていると見なしてそのような表記をします。\n- Wordpressの場合、サーバーの次にテーマを記載します。\n  * テーマ検索にはサイトURLから[Wordpress Theme Search](http://whatwpthemeisthat.com/)を利用します。\n  * 既存テーマの場合は『既存サービス利用』に、オリジナリティの高いテーマは『モダン』に記載します。\n- モダンかどうかは個人の意見ですが、ここではデザインを抜きに**近年のウェブ標準に近いかどうか**で判断しています。\n- ~~男子校だけじゃつまらないので女子校と共学校が入るといいなぁ。~~\n- 群馬県内以外の各校の事情は知らない。\n\n## モダン\n新しい技術やモダンなスタイルが意欲的に取り入れられているなぁ、と勝手に判断して追加しています。 \n\nとりあえずこの中に入るには、スマホ対応が必須でしょうね。 \n\n全て見て損はないはずです。その手の人達にはかなり参考になりそうです。 \n\n\n### KANTO\n\n\n\n#### 海城中学校・高等学校 : 海城祭\n[**KAIJO FES** http://www.kaijofes.com](http://www.kaijofes.com)  \n[**Github リポジトリ** https://github.com/fushigu/kaijo-fes-2017](https://github.com/fushigu/kaijo-fes-2017)\n\nテンプレートエンジンとして**JsRender**、そしてデザインは**Material Design Light**。\n\nJsRenderは、RiotやReact,Polymarの仲間。だけれど、日本だと人気っていう話は聞かないですねぇ。  \nあまり言いたくないんだけど、このUIは見にくい気がします。なぜ**全てをMaterial Designなカードで表現**しようと思ったし。   \nとりあえず、*あたまがよすぎてついてけない*とJKっぽい発言をして締めくくりましょう。  \n\n**サーバー: ~~Github Pages~~ ロリポップ** ※GitHubで動いているかと思いきや、IPを調べるとロリポップだった件。 \n\n\n\n\n\n#### 聖光学院中学校・高等学校 : 聖光祭\n[**聖光祭公式サイト** http://seikofesta.official.jp](http://seikofesta.official.jp)  \n[**聖光祭58th 公式アプリ** AppStoreでダウンロード](https://itunes.apple.com/us/app/%E8%81%96%E5%85%89%E7%A5%AD58th-%E5%85%AC%E5%BC%8F%E3%82%A2%E3%83%97%E3%83%AA/id1227008252) \n\n**すっごーい！**\nえ？なにこれ？力の入れ方すごくない？どんな暇人が作ったらこうなるの？？？？  \nたぶんちゃんとチームでやってるんだろうなぁ……  \n\nってかドメイン名が**official.jp**なんですけど……汎用的なドメインを使っていらっしゃる……  \n\nウェブフォントが**OmePlus**という知る人ぞ知るフォント。  \n\n**サーバー:**WebCrow→**Star Server** \n\n\n\n\n#### 埼玉県立浦和高校 : 浦高祭\n[**浦高祭 公式サイト** http://urakosai.net/](http://urakosai.net/) \n\n**WordPress**。企画ページをどうやって作ったかが気になって夜も眠れないです。\n\nブログを併設しています。ブログに手の内が明かされるらしいので定期的にチェックすることにしています。\n\n下部から過去のサイトが見れます。特に**[67回](http://urakosai.net/67th/)**は素晴らしいと思います。\n\n**フォークダンスが去年まで存在していたようです。**正直時代遅れじゃあないかなぁ。と思ったら、今年は流石に無いようです。\n\n**サーバー: CORESERVER** ※バリュードメインと同じ会社。\n**WPテーマ: For the 70th Urakosai** ※もちろん独自テーマ\n\n\n\n\n\n\n#### 筑波大学附属中学校・高等学校 : 筑駒文化祭\n[**筑駒文化祭公式ウェブサイト** http://tsukukoma.bunkasai.info/](http://tsukukoma.bunkasai.info/)  \n[**第65回筑駒文化祭ホームページ** http://tsukukoma.bunkasai.info/2016/](http://tsukukoma.bunkasai.info/2016/)\n\n省力的で良きです。フォント指定があべこべで謎……と思ったら、こぶりなゴシックが指定されていますね。何かWebフォントサービスを導入していたのでしょうか。\n\n参加団体のポップアップの文章をDOMエクスプローラーで見ると笑いました。\n\n**サーバー: ロリポップ**\n\n\n\n\n#### 法政大学第二中学校・高等学校 : 二中文化祭\n[**二中文化祭オフィシャルサイト** http://www.hosei2.ed.jp/festival/js/index.html](http://www.hosei2.ed.jp/festival/js/index.html)\n\nやはり参考にしたいサイト。情報量少なくていいなぁ(そこかよ)\n\n**サーバー: hosei2.ed.jp [法政二中 KDDI]**\n\n\n\n#### 栄光学園中学校・高等学校 : 栄光祭\n[**栄光祭公式サイト** http://eikogakuen.com/](http://eikogakuen.com/)\nよく動く。情報量が極限まで削られています。  \nVRを意欲的に取り入れています。\n\n**サーバー: さくらのレンタルサーバー**\n\n\n\n#### 渋谷幕張中学校・高等学校 : 槐祭\n過去のページは↓に記載  \n[**槐祭 2017** http://www.shibumaku.jp/mk-student/events/enju/2017/](http://www.shibumaku.jp/mk-student/events/enju/2017/)\n\nソースコードみたら暇人と思われた。サイテー！\n\n**サーバー: shibumaku.jp [渋谷幕張 ZenLogic]**\n\n\n\n\n\n\n\n#### 群馬県立高崎高校 : 翠巒祭\n[**翠巒祭ポータル** https://suiranfes.com/](https://suiranfes.com/)  \n[**第65回翠巒祭** https://2017.suiranfes.com/](https://2017.suiranfes.com/)  \n[**GitHub Organization** https://github.com/suiranfes/](https://github.com/suiranfes/)  \n\n2017年版サイトは失敗作でした。でも一応紹介だけ(露骨な宣伝)。HTMLは**Pug**で書かれています。公開時は、一回一回ビルドしてデプロイ。Service Workerでキャッシュ管理♂を行います。\n\n2014年から毎年新たなものを作成しています。ルートドメインはポータルサイトとなっています。西暦ごとにサブドメインを割り振って、過去のサイトを閲覧できるようになっています。  \nポータルサイトと2017年版サイトは自分が作りました。とはいえ、偏差値が低い高校がWebサイトで私立男子校にタイマンを張ろうとしても無駄でしょう。\n\n**サーバー: mixhost** ※mixhostはいいぞ。\n\n\n\n\n### HOKURIKU\n\n#### 石川高専 : 紀友祭\n[\"未開墾地\" https://fes.nitic.jp/](https://fes.nitic.jp/)\n\n未開墾地\n\n**サーバー: ConoHa**  ※製作者の方から教えていただきました。  \n※直接教えてもらうまでわかりませんでした。CloudFlareを利用しているからです。\n\n\n\n\n\n### KANSAI\n\n\n\n\n#### 灘中学校・高等学校 : 灘校文化祭\n[**灘校文化祭公式サイト** https://fest.nada.sc/](https://fest.nada.sc/)  \n[**GitHub リポジトリ** https://github.com/hideo54/NadaCultureFest2017](https://github.com/hideo54/NadaCultureFest2017)\n\n**派手ではないが、整ったサイト。**スマホ基準で作成されています。\n\nHTMLが**pug**なわりに、インストールやビルドには**yarn**を利用します。\n\n【追記】 とは書いたものの、俺はyarnの何を知っている(た)のかについてはすごく疑問が残るんですよね。だがしかし迷文は残す。\n\n**サーバー: さくらのレンタルサーバー**\n\n※ドメインは[灘校生徒会 nada.sc](http://nada.sc)のサブドメイン。2ちゃんねるで話題の.scドメイン。お名前ドットコムだと初年度12000円！げぇっ。私立はお金持ちだなぁ。  \n※https化はLet's Encrypt。なんだけど、ルートドメイン[nada.sc](http://nada.sc)にはなぜか適用されていない……謎だ。\n\n\n\n\n\n\n\n#### 六甲学院中学校・高等学校 : 六甲学院文化祭\n**以前: **2010,2011,~~2012~~[HTTP 403],2013,2014,2015年版サイトを確認。\n\n[**第57回六甲学院文化祭 「楼(たかどの)」** http://www.st.rokko.ed.jp/festival/cultural/2016/](http://www.st.rokko.ed.jp/festival/cultural/2016/)  \n[**UNDER CONSTRUCTION** http://www.st.rokko.ed.jp/festival/cultural/2017/](http://www.st.rokko.ed.jp/festival/cultural/2017/)\n\nシンプルでモダンなデザイン。\n\n……てこれ、トップページのcanonicalの指定が間違ってるような……(ソース参照)\n\n**サーバー: www.st.rokko.ed.jp [六甲学院 ファーストサーバー]**\n\n\n\n\n\n### KYUSHU\n\n#### 学校法人久留米大学附設高校 : 男く祭\n[**男く祭公式ホームページ** http://otokokusai.info/](http://otokokusai.info/)\nさわらびが効いてる。\n色使いが古いのと、スペーシングが(気に入らないのと、個人的にはさわらびが嫌い。\nしかしなにより、**HTML5の仕様書をきちんと理解し、マークアップを適切にしています。**\n\n**サーバー: 不明** IPひろばでDIXって出たけどDIX自体は提供してなくてこれなに\n\n\n\n\n\n## 既存サービス利用\nGoogle SitesやJimdo、WordPressの既存テーマで作られたサイトです。結構良い選択肢だと思う。\n\n\n\n\n\n\n#### 大妻嵐山中学校・高等学校 : 大妻祭\n[**大妻祭** http://www.otsuma-ranzan.ed.jp/festival/](http://www.otsuma-ranzan.ed.jp/festival/)\n\n**WordPress**。\n\n**サーバー: WebARENA SuiteX** ※教員管理な気がする。  \n**WPテーマ: Madeini**\n\n\n\n\n\n#### 群馬県立前橋高校 : 蛟龍祭 隔年\n[**蛟龍祭 Official Web Site** http://kouryo-sai.com/](http://kouryo-sai.com/)\n\n**WordPress**。今時Flash Playerとかナイナイww\n\n※高崎高校と前橋高校はライバル関係であり、今回も例に漏れず煽りまくっています。気にしないでください。\n\n**サーバー: ロリポップ**  \n**WPテーマ: MH Magazine lite**\n\n\n\n\n\n\n#### 埼玉県立川越女子高校 : 紫苑祭\n[**川越女子高校「紫苑祭」** http://shionfes.wixsite.com/shionfestival](http://shionfes.wixsite.com/shionfestival)\n\n**Wix**なだけあって体裁が整っている。ブログはアメブロ。\n\n**サービス: Wix**\n\n#### 茨城県立土浦第一高校 : 一高祭\n[**一高祭第69回公式サイト** http://t1sendenkouhou.wixsite.com/69th1kousai](http://t1sendenkouhou.wixsite.com/69th1kousai)\n\n**Wix**。2017年は第70回のはずだが、**サイトの更新はなかったようである。****この記事で数少ない共学校**なのになぁ。\n\n**サービス: Wix**\n\n\n\n\n#### 埼玉県立浦和第一女子高校 : 一女祭\n[**一女祭 2017** https://ichijo-fes-2017.wixsite.com/have-a-nice-torip]\n\n**サービス: Wix**\n\n\n\n\n\n#### 宮城県仙台第一高校 : 壱高祭\n[**59thitikousai** http://59thitikousaisenkou.wixsite.com/59thitikousai](http://59thitikousaisenkou.wixsite.com/59thitikousai)\n\n**Wix**。2016年の第59回のまま作りかけで終わっている。\n\n**この記事増加傾向の共学校。**とすけ氏から情報をいただきました。ありがとうございます。\n\n**サービス: Wix**\n\n\n\n\n\n#### 川越東高校 : 翔鷺祭\n[**川越東高校 翔鷺祭 公式広報サイト** http://www3.hp-ez.com/hp/shorofes/](http://www3.hp-ez.com/hp/shorofes/)\n\n私は知らなかったが、私立の男子校。模型コン出てない他県の高校基本的に知らない、、、\n\n**簡単無料ホームページ.com**\n\n\n\n\n## そこまで？\n**ハッキリ言って… まだキミはダサい！**(Splatoon チュートリアルから引用)\n\n\n\n\n\n\n\n\n\n\n\n\n#### 埼玉県立川越高校 : くすのき祭\n[**埼玉県立川越高校 くすのき祭** http://kusunoki-fes.com/](http://kusunoki-fes.com/index.html)\n\n勢いがある。画像軽量化がなかったり、`&lt;font&gt;`が残っていたりするのが惜しいかも。\n\n……これ、HPビルダーで作ったやつを毎年煮込んでるのでは……\n\nてかあったわ、**誰でも参加できるフォークダンス的なの。**\n\n**サーバー： XSERVER**\n\n\n\n\n\n\n\n\n\n\n####  立教新座中学校・高等学校 : St.Paul's Festival\n2014以前: 2012,2013  \n[**2014 S.P.F.** http://niiza.rikkyo.ac.jp/spf/2014/](http://niiza.rikkyo.ac.jp/spf/2014/)  \n↓URL形式変更  \n2017以前: 2015,2016  \n[**2017年立教新座文化祭** http://niiza.rikkyo.ac.jp/spf/2017/page/](http://niiza.rikkyo.ac.jp/spf/2017/page/)\n\n悪いコード使いまわしてる感\n\n**サーバー: niiza.ac.jp[立教大学 JNIC]**\nJNICのIPが割り当てられてるんだけど、ナニコレ？  \n大学のサーバーは特殊なので深入りはしないようにしましょうか。\n\n\n\n\n\n#### 東大寺学園 : 菁々祭\n[**東大寺学園 菁々祭公式サイト** http://tdjschoolfes.sakura.ne.jp/](http://tdjschoolfes.sakura.ne.jp/)\n\nうーん、いや、なんかほらね？\n\n**サーバー: さくらのレンタルサーバー**\n\n\n\n\n\n\n## 時代を超えて……\n\nううむ、香ばしい！\n\n\n\n#### 群馬県立高崎女子高校 : 椎樹祭 隔年\n[**椎樹祭HP** http://www.takajo-hs.gsn.ed.jp/s_fes/index.htm](http://www.takajo-hs.gsn.ed.jp/s_fes/index.htm)\n\n香ばしいぞー！……とは言っても実は今年の担当の人に相談されたんだけどね。ごめん他校まで面倒見きれなかった。\n\n**サーバー: GSN(ぐんまスクールネット)** ※GSNによると、index.htmはインデックスではないらしいです。各学校のサイトの作り方のpdfが[総合教育センターHP](http://www.nc.center.gsn.ed.jp/index.php?page_id=75)よりダウンロードできます。\n\n\n\n\n## おまけ: 文化祭連絡会的なもの\n\n- 【関東】[**集まれ文実！**](https://atsubun-web.jimdo.com/)\n- 【関西】[**おたくの文化祭どないでっか？**](https://otabun.jimdo.com/)\n\n\n\n## おまけ：高校文化祭のWebサイト制作に求められる要件\n- 日取りが決められていることです。会期は、2日間、多くて3日間。\n  * やはり当日にかけてアクセスが多くなるようです。<br>Google Analyticsによれば、開催期間とその前の30日間のうち、開催期間前後含めた4日間の閲覧数の割合は**半分以上**です。\n- Webサイトでは、文化祭で行う各行事について事前に細かく紹介できます。<br>そうすると、数種類に分類できる沢山の情報を扱うようになります。<br>例えば、\n  * クラス展示、部活動展示(校舎内の展示、当校の用語で言う「一般展示」)の内容\n  * 模擬店等で扱う食品の一覧\n  * イベント・ステージの情報\n- 閲覧の多くがスマホです(どのサイトでも同じだけど)。<br>ここにGoogle Analyticsのセッション数の統計を紹介しましょう。\n  * 全体でセッション数を見ると、iOSが57%、Androidが28%、Windowsが13%ほど。次いでMacintoshが0.70%、Linuxが0.18%。さらに、Wii UとPS Vitaでの閲覧も僅かにあった模様です。\n  * 開催期間に近づくほど、スマホでの閲覧が増加します。\n  * Amazon Silkでの閲覧が3セッションありました。\n  * モバイルだけで見ると、iPhoneでのセッションは62%、iPadが2.8%。さらに、Sonyブランドのセッションが13%ほど。Apple、Sonyときて第3位はSharpの5.2%。Samsung、Fujisuが2%台で続きます。\n  * モバイルだけで見ると、サービスプロバイダ\"tohoku university\"及び\"tokyo institute of technology\"からの閲覧が其々1セッションずつありました。\n","meta":{"src":{"root":"","dir":"pages/blog","base":"bunkasai.md","ext":".md","name":"bunkasai","subdir":"blog"},"md5":"0872ba371beedb346b08bc086990ce7a","sha384":"RaSzS3JRuNfJZQcmpfmxFKcmDaMOZb2iPIUvZD458uoDb9hgGwIk8YJpiAcUs22R","mtime":"2017-12-04T14:48:27.158Z","birthtime":"2017-08-21T14:42:09.445Z","thumbnail":null,"permalink":"/blog/bunkasai/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":3659174697295688,"size":18117,"atimeMs":1511942032078,"mtimeMs":1512398907158.463,"ctimeMs":1512398907158.463,"birthtimeMs":1503326529445.1772,"atime":"2017-11-29T07:53:52.078Z","mtime":"2017-12-04T14:48:27.158Z","ctime":"2017-12-04T14:48:27.158Z","birthtime":"2017-08-21T14:42:09.445Z"}},{"attributes":{"description":"aqzカテゴリの記事一覧です。主に自分自身について取り扱っています。","layout":"blog-index","query":{"category":"aqz"},"title":null,"published":true,"draft":false},"body":"","meta":{"src":{"root":"","dir":"pages/blog/category","base":"aqz.md","ext":".md","name":"aqz","subdir":"blog/category"},"md5":"3627486ca5217ab3de8c7134da6b894e","sha384":"wRaRvlOF0IlMBvBz+BdtauGBj5hEJ34IYQ+zQAeiDE1ltc6Fog+SoXgEwl7pdpgx","mtime":"2017-12-08T13:54:10.362Z","birthtime":"2017-11-18T13:03:24.125Z","thumbnail":null,"permalink":"/blog/category/aqz/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":5066549580841365,"size":164,"atimeMs":1511010204125.1382,"mtimeMs":1512741250362.3423,"ctimeMs":1512741250362.3423,"birthtimeMs":1511010204125.1382,"atime":"2017-11-18T13:03:24.125Z","mtime":"2017-12-08T13:54:10.362Z","ctime":"2017-12-08T13:54:10.362Z","birthtime":"2017-11-18T13:03:24.125Z"}},{"attributes":{"title":"カテゴリー","description":"indexカテゴリの記事一覧です。カテゴリ一覧があるわけではありません。","layout":"blog-index","query":{"category":"index"},"published":true,"draft":false},"body":"","meta":{"src":{"root":"","dir":"pages/blog/category","base":"index.md","ext":".md","name":"index","subdir":"blog/category"},"md5":"d8bed7de1e1041785e8296ffbf879d2b","sha384":"rJJPwuilXuEIEM9ggVJFIh9/kw34EXop18180CHo6k3YNjCAy54wBBi5YVs45Uta","mtime":"2017-12-08T14:10:12.710Z","birthtime":"2017-11-20T03:47:44.495Z","thumbnail":null,"permalink":"/blog/category/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":34339947158747652,"size":192,"atimeMs":1512742212710,"mtimeMs":1512742212710,"ctimeMs":1512742212711.0906,"birthtimeMs":1511149664494.9907,"atime":"2017-12-08T14:10:12.710Z","mtime":"2017-12-08T14:10:12.710Z","ctime":"2017-12-08T14:10:12.711Z","birthtime":"2017-11-20T03:47:44.495Z"}},{"attributes":{"description":"webカテゴリの記事一覧です。web技術について何か書いてあるかもしれません。","layout":"blog-index","query":{"category":"web"},"title":null,"published":true,"draft":false},"body":"","meta":{"src":{"root":"","dir":"pages/blog/category","base":"web.md","ext":".md","name":"web","subdir":"blog/category"},"md5":"cb8a16f8f68cfb122b506db7036df4e6","sha384":"g8T/2KG3sgHYajpThrJViMecxBiZUUW/F08elDevoL179TJRSp4O236S+nQ9DdeL","mtime":"2017-12-08T13:54:13.935Z","birthtime":"2017-11-19T15:00:56.815Z","thumbnail":null,"permalink":"/blog/category/web/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":18014398509530370,"size":173,"atimeMs":1511103656815.4497,"mtimeMs":1512741253935.4802,"ctimeMs":1512741253935.4802,"birthtimeMs":1511103656815.4497,"atime":"2017-11-19T15:00:56.815Z","mtime":"2017-12-08T13:54:13.935Z","ctime":"2017-12-08T13:54:13.935Z","birthtime":"2017-11-19T15:00:56.815Z"}},{"attributes":{"description":"なにかカテゴリの記事一覧です。なにかです。よろしくおねがいします。ねこはいます。","layout":"blog-index","query":{"category":"なにか"},"title":null,"published":true,"draft":false},"body":"","meta":{"src":{"root":"","dir":"pages/blog/category","base":"なにか.md","ext":".md","name":"なにか","subdir":"blog/category"},"md5":"30008a7170916aadc579ae3782e958e6","sha384":"sR1irjdotk0luiHRIEKNkVNib4LlvTZb4Nkr1rMQC2vIf0cYjWq1wS+kPc78rghJ","mtime":"2017-12-08T13:54:16.034Z","birthtime":"2017-11-19T15:01:55.294Z","thumbnail":null,"permalink":"/blog/category/なにか/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":17451448556109146,"size":194,"atimeMs":1511103715294,"mtimeMs":1512741256034.4622,"ctimeMs":1512741256034.4622,"birthtimeMs":1511103715294.108,"atime":"2017-11-19T15:01:55.294Z","mtime":"2017-12-08T13:54:16.034Z","ctime":"2017-12-08T13:54:16.034Z","birthtime":"2017-11-19T15:01:55.294Z"}},{"attributes":{"description":"趣味カテゴリの記事一覧です。鉄道とか写真とかが趣味だと自称しています。多分一般的なオタクです。","layout":"blog-index","query":{"category":"趣味"},"title":null,"published":true,"draft":false},"body":"","meta":{"src":{"root":"","dir":"pages/blog/category","base":"趣味.md","ext":".md","name":"趣味","subdir":"blog/category"},"md5":"21627aa01f030fc9f4b5c9e94285b926","sha384":"4ovNsNqwu72U/d4szxNyW0f/04LBnEG8aTIS1CXAY0K3Swa0vhmlDKEHWpR+StDK","mtime":"2017-12-08T13:54:18.192Z","birthtime":"2017-11-19T15:01:32.731Z","thumbnail":null,"permalink":"/blog/category/趣味/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":17732923532819756,"size":212,"atimeMs":1511265648702,"mtimeMs":1512741258192.0444,"ctimeMs":1512741258192.0444,"birthtimeMs":1511103692731.479,"atime":"2017-11-21T12:00:48.702Z","mtime":"2017-12-08T13:54:18.192Z","ctime":"2017-12-08T13:54:18.192Z","birthtime":"2017-11-19T15:01:32.731Z"}},{"attributes":{"title":"Chirnoプロジェクト","description":"Bootstrap v4β日本語化プロジェクト始動……? 更新が多くてツライ！","layout":"blog","amp":true,"published":true,"draft":false,"tags":["bootstrap"],"categories":["web"]},"body":"\n<span class=\"maqz maqz-img-wrap-light float-md-left\">[![イメージ](/files/blog/chirno/scnsht_001.png)Bootstrap Chirno](https://chirno.tmin.xyz/)</span>\n\n## もしかして: Cirno\n\n公式ではそうなんですけど、それだと「シルノ」としか読めない気がするのでChirnoのほうが正しいとおもいます\n\n## どんなことをするの？\n\n1. Bootstrapの日本語への最適化(標準フォントを利用)\n2. 説明書の日本語化\n\nこの2つを軸に活動します。\n\n### Bootstrapの日本語への最適化\n\n[Honoka](http://honokak.osaka)みたいなことをします。というかHonokaがベータに対応しないのに業を煮やして作りました。\n\nChirnoではHonokaでやったことをそのまま移植せず、なるべく**基本的なデザインはもとのBootstrapのまま**にしています。  \nまた、フォント指定も新しく出てきたYaku Han JPに標準で対応しています。\n\n### 説明書の日本語化\n\n頑張って英語を解読します。\n\n## 今後の展望\n\n独自のスタイルを追加したものを製作予定です。","meta":{"src":{"root":"","dir":"pages/blog","base":"chirno_intro.md","ext":".md","name":"chirno_intro","subdir":"blog"},"md5":"a7d1cc732732db1b6b8587be0656727c","sha384":"15XBXBCvNCmhd/QqVhRrg/oGbbfMwL0EYTugd067CZYFFovVbPWFTXknkBAGijbx","mtime":"2017-12-12T11:51:52.080Z","birthtime":"2017-10-18T13:20:50.573Z","thumbnail":null,"permalink":"/blog/chirno_intro/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":6192449487692723,"size":1351,"atimeMs":1513078721921,"mtimeMs":1513079512080.005,"ctimeMs":1513079512080.005,"birthtimeMs":1508332850572.9026,"atime":"2017-12-12T11:38:41.921Z","mtime":"2017-12-12T11:51:52.080Z","ctime":"2017-12-12T11:51:52.080Z","birthtime":"2017-10-18T13:20:50.573Z"}},{"attributes":{"title":"Markdown代入テスト","description":"${~}を利用して特定の内容を代入することができます。ただそれだけです。","layout":"blog","amp":true,"published":true,"draft":false,"tags":["なにか"],"categories":["なにか"]},"body":"\n## この記事の意味\n\nmaqzでは、＄{~}を利用して特定の内容を代入することができます。\n\neval関数の中で、HTML変換後の文字列をテンプレートリテラルとして展開しています。\n\n## 見本\n\nこの記事のソースのmd5ハッシュ値は\"${page.meta.md5}\"です。\n\n```\nこの記事のソースのmd5ハッシュ値は\"\\${page.meta.md5}\"です。\n```\n\n2かける3は${ 2 * 3 }です。\n\n```\n2かける3は\\${ 2 * 3 }です。\n```","meta":{"src":{"root":"","dir":"pages/blog","base":"getval_test.md","ext":".md","name":"getval_test","subdir":"blog"},"md5":"befc6c292d044ecbbc05a5fc5113628e","sha384":"VyTXlWF/053S1wVymvgbeEWF8NBFHbwSSoXmtAUoTsyTsDUnj/ULbdc3dj+KZWMg","mtime":"2017-12-04T12:09:00.726Z","birthtime":"2017-11-01T09:42:09.779Z","thumbnail":null,"permalink":"/blog/getval_test/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":4785074604354269,"size":721,"atimeMs":1512389340726,"mtimeMs":1512389340726,"ctimeMs":1512389340727.0095,"birthtimeMs":1509529329779.404,"atime":"2017-12-04T12:09:00.726Z","mtime":"2017-12-04T12:09:00.726Z","ctime":"2017-12-04T12:09:00.727Z","birthtime":"2017-11-01T09:42:09.779Z"}},{"attributes":{"title":"Font Awesomeを5にした話","description":"タイトルの通りです。情報が少ないうちに簡単な導入方法を書いてみます。Gruntをgulpにしたこともついでにご報告いたします。","layout":"blog","amp":true,"published":true,"draft":false,"categories":["web"]},"body":"\n## Font Awesome 5\n\n### 更新の概要\n\nサイトは[Font Awesome 5 fontawesome.com](https://fontawesome.com/)  \nURLも従来の.ioから移転されました。  \n[v4からのアップデートガイド](https://fontawesome.com/how-to-use/upgrading-from-4)もあり、かなり優しい説明書になっています。\n\n- お金を払ってより多くのアイコンを手に入れることができる、Proバージョンができました。\n  * 従来から比べて不便になるようなことは全くありません。  \n  * ProではLightウェイト(後述)等\"違い\"のあるアイコンを利用できます。\n- [導入方法](https://fontawesome.com/get-started)が増えました。\n  * [**JavaScriptとSVGによる描画**](https://fontawesome.com/get-started/svg-with-js)が新たに追加されました。今バージョンではこれが推奨されています。\n    * ページをパースし、自動的に`&lt;style&gt;`タグと`&lt;i&gt;`タグの中にsvgを生成します。\n    * [npmパッケージ](https://www.npmjs.com/package/@fortawesome/fontawesome)を用いれば、[サーバー(node.js)サイドで事前にSVGを埋め込む](https://fontawesome.com/get-started/advanced-options)こともできます。詳細は後述。\n  * もちろん、[従来のCSSとWebFontを用いたバージョン](https://fontawesome.com/get-started/web-fonts-with-css)でも可能です。\n  * [フォントをパソコンにインストールすれば](https://fontawesome.com/get-started/desktop)、OpenTypeの合字として表示することができます。\n    * 対応しているソフトや使う場所が限られていますが、特にデザイナーはかなり重宝しそうです！\n- アイコンの種類が明確に分かれました。\n  * **Solid**(塗りつぶし), **Regular**(線・標準の太さ), *light*(線・細い *Proのみ*), **Brands**(ブランド)の4種類があります。\n- `fa`プレフィックスに代わり、種類ごとのプレフィックス`fas`,`far`,*`fal`*,`fab`になりました。\n  * 例えば`&lt;i class=\"fab line\"&gt;&lt;/i&gt;`,`&lt;i class=\"fas clock\"&gt;&lt;/i&gt;`など。\n- 種類分けに併せて、アイコンの命名が変わりました。\n  * より論理的に、そして無垢になりました。\n  * 4から利用している方は要注意です。しかしご安心ください。`fa-v4-shim.js`を利用すれば、そのままで大丈夫です。\n  * [→ アップデートガイド](https://fontawesome.com/how-to-use/upgrading-from-4)を参照してください。\n\n### maqzでの導入例\n\nサイトビルダー等の事前処理ができる状況においては、JavaScriptの処理をビルド時にしてしまいたいと誰もが思うはずです。\n\n前述のとおり、npmパッケージによってそれができるようになりました。\n\n以下に例を示しますが、APIの説明をすっとばして実使用の場合のみを想定しています。  \n詳しくは[APIの説明](https://fontawesome.com/how-to-use/font-awesome-api)を読んでください。  \nブラウザとnode.js双方の仕様についてたいへんわかりやすく書かれています。\n\n以下に、node.jsを用いて必要なcssとHTMLタグを出力する方法を示します。\n\n#### 4ステップで導入!\n\n数学の問題集じゃないけどね！\n\n##### ① 必要なパッケージをインストールします\n```\nnpm i --save-dev @fortawesome/fontawesome @fortawesome/fontawesome-free-solid @fortawesome/fontawesome-free-regular @fortawesome/fontawesome-free-brands\n```\n\n##### ② **初期設定**はこのようにします\n```\n// fa本体\nconst fontawesome = require(\"@fortawesome/fontawesome\")\n\n// faライブラリ\nconst faSolid = require(\"@fortawesome/fontawesome-free-solid\")\nconst faRegular = require(\"@fortawesome/fontawesome-free-regular\")\nconst faBrands = require(\"@fortawesome/fontawesome-free-brands\")\n\n// faライブラリ登録\nfontawesome.library.add(faSolid, faRegular, faBrands)\n```\n\n##### ③ スタイルを設定します。\n\n次の関数は必要なcssを返しますので、cssとして適用されるようにうまく埋め込みます。  \n```\nfontawesome.dom.css() //:string (css)\n```\n\n##### ④ HTMLを埋め込みます。\n\n以下に示すようなコードが**html(svgタグ)**を返します。\n\n- prefixには種類に応じたプレフィックスを指定します。\n- iconはアイコン名を指定します。\n- optionについては[APIの説明](https://fontawesome.com/how-to-use/font-awesome-api#icon)を見てください。\n\n.htmlプロパティは、svgタグ文字列の**配列**を返してきます。何も考えず[0]を指定しましたが、多分大丈夫だと思います…\n```\nconst $prefix = \"fab\"\nconst $icon = \"line\"\nconst $option = { classes: [\"fa-fw\"] }\n\nfontawesome.icon({ prefix: $prefix , iconName: $icon }, $option ).html[0] //:string (svgタグ)\n```\n\nSVGタグはiタグ等で囲わずともそのまま利用できます。以前に比べ、外部ファイルの参照がなくなり、読み込みデータ量もかなり少なくなりました。\n\n## Grunt → gulp\n\n思い立ったが吉日、ついに変えました。しかも**gulp v4**。\n\n名前は似ていますがこいつら**完全に別物**です。\n\n関数等は使いまわしましたが、多くの処理は完全に新規に書き起こしたようなものです。\n\n半分ぐらい早くなったと思います。速さのほかにも、Streamを利用すればいちいちファイルを書きださなくて済むというところが楽でいいです。\n\n移転にあたっては、よくわからない処理のリファクタリングもしました。まだ未確認のバグがあるかもしれませんが使っているうちに治るでしょう。","meta":{"src":{"root":"","dir":"pages/blog","base":"gulp_fa5.md","ext":".md","name":"gulp_fa5","subdir":"blog"},"md5":"d1991d21fb08246c50ae7a9a2d1c1ab2","sha384":"Nb2g4ImCniS7itVX+qXpgzdWr5Pcco7YTeTBUIrpM9bFZ8Cje6y+OY8D6R/BVZ2c","mtime":"2017-12-08T16:06:16.393Z","birthtime":"2017-12-08T14:26:51.578Z","thumbnail":null,"permalink":"/blog/gulp_fa5/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":6192449487900462,"size":6212,"atimeMs":1512749176392.9998,"mtimeMs":1512749176392.9998,"ctimeMs":1512749176392.729,"birthtimeMs":1512743211578.192,"atime":"2017-12-08T16:06:16.393Z","mtime":"2017-12-08T16:06:16.393Z","ctime":"2017-12-08T16:06:16.393Z","birthtime":"2017-12-08T14:26:51.578Z"}},{"attributes":{"title":"キハ110系撲滅運動","description":"大都市に住んでて、通勤電車が混んでる、とかならまだわかるんです。でも、セミクロスの気動車で押し込まれるってどーなのさ。","layout":"blog","amp":true,"published":true,"draft":false,"tags":["鉄道"],"categories":["趣味"]},"body":"\n今回の愚痴は毎日のように利用する八高北線についてです。\n\n<span class=\"maqz maqz-img-wrap-light float-md-left\">![キハ110系](/files/blog/hachikou/kiha110.jpeg \"キハ110系 @高崎駅\")</span>\n\nまあ要約すると**満員列車が嫌だ**って話なんですけど。\n\n何が起きているかというと、藤岡市民が高崎・前橋や本庄などに通勤・通学する需要が多く、かなり混み合っているのだ。\n\n2ドアの満員電車って最悪じゃないですか。  \n車両の真ん中は詰まってないのに、ドアの近くだけぎゅうぎゅう詰め。  \n真ん中が詰まらないのは理由があって、クロスシートだから。ドアの近くはロングシートだけど。\nあとは、3両編成だと必ずトイレが2つついてくる。  \n場合によっては3つ。そんなに要らないし、乗務員室も邪魔。    \n倉賀野駅は高崎線があるにも関わらず30人ぐらい乗ってくる。\n\n水郡線はキハ130に置き換わったじゃないか、だって？  \nまあつまりそういうこと……  \n群馬県の鉄道の利用者は高校生がかなりの割合を占めています。田舎特有の特徴ですね。  \n八高線が群馬県内で通る市町村は藤岡市と高崎市だけ。  \n乗ったことがある方はわかるのですが、混んでいる区間は群馬藤岡-高崎間だけです。  \n児玉折り返しの区間列車がありますが、群馬藤岡で折り返してしまっても良いくらい……。  \n当然ながら藤岡市民だけでは列車を更新して利益が出るだけの利用は見込めない。  \n一部の藤岡市民はそもそも八高線を使わず、新町駅から本数の多い高崎線に乗るということも。  \n高校生は親に駅まで車で送ってもらってますからね。そのくらいは余裕。  \n\nまあ最後に適当にデータ見てみる。  \n以下はH27年のデータで、H29群馬県統計年鑑による。  \n群馬藤岡駅の一日乗降客数は1245人。安中駅の1813人を下回り、安中+磯辺(1143人)では大幅に下回る。\n北藤岡駅の乗降客数は増えていると思うのだが、JR東日本が無人駅の乗降客数をH26年度から発表していないので役に立たない。過去のデータから見ると300人程度だろうか。再開発しているので地味に増えている気が……\n\n**地獄の通勤通学は永遠に終わることはないだろう。**\n\nキハ110系導入以前はキハ30系列がいたんだけどなぁ  \n(キハ30系列は3ドアラッシュ型。ただし**非冷房**。特にキハ38形は~~ストライキで有名な~~久留里線にいたが、こちらも水郡線と同様キハ130系に置き換えられている。)","meta":{"src":{"root":"","dir":"pages/blog","base":"hachikou.md","ext":".md","name":"hachikou","subdir":"blog"},"md5":"333787cb345ec7bfa63bb2d42806c740","sha384":"HePKN6/7YHlCZ9lc3hN2zqd2eWYZDuIiTeS2VTEvpsVZVieoG4tyY8GnIg6TZ1dQ","mtime":"2017-12-12T11:51:43.085Z","birthtime":"2017-10-28T14:01:54.888Z","thumbnail":null,"permalink":"/blog/hachikou/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":1407374883845724,"size":3158,"atimeMs":1511689323812,"mtimeMs":1513079503084.6406,"ctimeMs":1513079503084.6406,"birthtimeMs":1509199314887.6436,"atime":"2017-11-26T09:42:03.812Z","mtime":"2017-12-12T11:51:43.085Z","ctime":"2017-12-12T11:51:43.085Z","birthtime":"2017-10-28T14:01:54.888Z"}},{"attributes":{"title":"ブログ","description":"“徒然なるままに”書いていっています。内容は、愚痴、メモ、その他。","layout":"blog-index","published":true,"draft":false},"body":"\nすごく適当に書いています。\n\nでもたぶん有益な情報はないので大丈夫です。","meta":{"src":{"root":"","dir":"pages/blog","base":"index.md","ext":".md","name":"index","subdir":"blog"},"md5":"fd8e55b791b10a3106c0741a1c796279","sha384":"sGIln6m85JaGIG65LbnchND6oV+fh577megmpUEJLxebB8v/VWQH3eSsI+6GEyUm","mtime":"2017-11-26T13:07:58.032Z","birthtime":"2017-11-18T13:00:46.643Z","thumbnail":null,"permalink":"/blog/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":9007199254790214,"size":270,"atimeMs":1511183786785,"mtimeMs":1511701678031.618,"ctimeMs":1511701678031.618,"birthtimeMs":1511010046643.1646,"atime":"2017-11-20T13:16:26.785Z","mtime":"2017-11-26T13:07:58.032Z","ctime":"2017-11-26T13:07:58.032Z","birthtime":"2017-11-18T13:00:46.643Z"}},{"attributes":{"title":"webpackとWorkboxを使い始めた","description":"Browserifyと自家製ServiceWorkerを置き換えました。自慢できるようなことじゃないんだけどなぁ。","layout":"blog","amp":true,"published":true,"draft":false,"tags":["maqz"],"categories":["web"]},"body":"\nちゃんと\"近代化\"を施しました。\n\nタスクツールのGruntは永遠に変わらない気がしますが……\n\n## Browserify → webpack\n\nとりあえずwebpackは纏めるだけです。\n\nやっぱり速いですね。\n\npugを改良し、highlight.jsをビルド時にパースするようにしました。クライアントサイドJSのサイズ・読み込みのさらなる軽量化が期待できます。\n\nhighlight.jsの処理部は`_script.pug`、webpackの処理部は`Gruntfile.js`および`webpack.config.js`です。\n\n## Workbox\n\n自分で作ったServiceWorkerを使ってブラウザにキャッシュさせていましたが、正直あまりうまくいきませんでした。\n\nWorkboxは、そんな面倒くさいServiceWorkerキャッシュを簡略化してくれるライブラリです。\n\n日本語の情報が少なくて、Bootstrapのプロジェクトを見るまで知りませんでした。\n\nWorkboxのビルド時の処理は、**twbs/bootstrapのv4-devブランチからコードを借用しました。**  \n若干の変更はありますが、ほぼ全てをbuild/service-worker.jsから引用しました。\n\nビルド処理部は`Gruntfile.js`の`sw`タスクです。`workboxer()`関数が指定されています。  \nクライアント処理部はそのコードを見ればどうなってるかわかると思います。  \nbootstrapのビルドスクリプトはどちゃくそ有能なのでぜひ使ってみて……","meta":{"src":{"root":"","dir":"pages/blog","base":"maqz001400.md","ext":".md","name":"maqz001400","subdir":"blog"},"md5":"56091af29dace0567b4dd1aa6582a4e3","sha384":"fgbnXPfuKSwZs2O5xdYbmttIrCC5vlsZS/Sk1Eb7EtYahDX2FVBez+uwXPIaIWW5","mtime":"2017-11-26T13:08:21.982Z","birthtime":"2017-11-02T06:43:23.599Z","thumbnail":null,"permalink":"/blog/maqz001400/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":20829148276615068,"size":1750,"atimeMs":1511701701982.0002,"mtimeMs":1511701701982.0002,"ctimeMs":1511701701981.9136,"birthtimeMs":1509605003598.5188,"atime":"2017-11-26T13:08:21.982Z","mtime":"2017-11-26T13:08:21.982Z","ctime":"2017-11-26T13:08:21.982Z","birthtime":"2017-11-02T06:43:23.599Z"}},{"attributes":{"title":"高崎","description":"aqzカテゴリの記事一覧です。主に自分自身について取り扱っています。","layout":"blog-index","query":{"directory":"takasaki"},"published":true,"draft":false},"body":"","meta":{"src":{"root":"","dir":"pages/blog/takasaki","base":"index.md","ext":".md","name":"index","subdir":"blog/takasaki"},"md5":"9b9b081b9fbed308a741b56fbc975aaf","sha384":"MaKTRHAMzx+3XgsJYgyT5sm26/WzRGdYVbLBTtw4tS6szxIMpbHLGDT0RBP0kUWr","mtime":"2017-12-02T14:38:06.123Z","birthtime":"2017-11-29T11:05:40.878Z","thumbnail":null,"permalink":"/blog/takasaki/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":9288674231477272,"size":185,"atimeMs":1511953540878.3247,"mtimeMs":1512225486122.8323,"ctimeMs":1512225486122.8323,"birthtimeMs":1511953540878.3247,"atime":"2017-11-29T11:05:40.878Z","mtime":"2017-12-02T14:38:06.123Z","ctime":"2017-12-02T14:38:06.123Z","birthtime":"2017-11-29T11:05:40.878Z"}},{"attributes":{"title":"トップページ","layout":"index","description":"aqzというハンドルネームの人間が運営しているサイトです。自家製サイトビルダーmaqz製。主にブログを適当に書いています。","published":true,"draft":false},"body":"\n-\n  const fontawesome = require(\"@fortawesome/fontawesome\")\n  const faSolid = require(\"@fortawesome/fontawesome-free-solid\")\n  const faBrands = require(\"@fortawesome/fontawesome-free-brands\")\n  fontawesome.library.add(faSolid, faBrands)\n\nmixin fa( $icon, $prefix )\n  i(class=`fa ${$prefix || \"fas\"} ${$icon}`)!= fontawesome.icon({ prefix: ( $prefix || \"fas\" ), iconName: $icon }).html[0]\n\nmixin social_circle( $url, $fa, $title )\n  a(href=$url, target='_blank', rel='noopener', title=$title).rounded-circle.bg-light.text-dark.social-circle.m-2\n    +fa($fa, \"fab\")\n\n#head.text-center\n  #headimgwrp\n    #headimg0(style=`background-image:url(\"${site.url.path}/files/top/1st/0.jpeg\")`, data-imgnum=\"0\")\n  #headgo.container\n    #headwrp\n      h1.pt-4 アキウス\n      p.lead= \"aqz = tamaina\"\n\n#intro.bg-light.text-center.py-5\n  .container\n    h2.mb-3 自己紹介\n    .row\n      .col-lg-4.d-flex.h-100.py-4.px-md-2\n        img(src=`${site.url.path}/files/images/icons/icon.png`, width=\"100\", height=\"100\", alt=\"icon\").m-auto\n      .col-lg-8.py-4.px-md-2\n        h3.mb-3 aqz = tamaina\n        p.mb-2 両方の名前を使います。別にどちらで呼んでもかまいません。\n        p.mb-2 Web系をうろついています。\n        p 趣味は、鉄道だったり、写真だったり。\n        a(href=`${site.url.path}/blog/about_me`).btn.btn-primary.btn-block それほど詳しくない詳細\n\n#socials.bg-danger.text-center.py-5\n  .container.text-light\n    h2 SNSとか\n    .py-3.d-flex.flex-wrap.justify-content-center\n      if(site.social_media.twitter.stalk)\n        +social_circle( `https://twitter.com/${site.social_media.twitter.stalk}`, \"twitter\", `twitter ${site.social_media.twitter.stalk}` )\n      if(site.social_media.flickr.stalk)\n        +social_circle( `https://www.flickr.com/people/${site.social_media.flickr.stalk}/`, \"flickr\", \"flickr\" )\n      if(site.social_media.github.stalk)\n        +social_circle( `https://github.com/${site.social_media.github.stalk}`, \"github\", `github @${site.social_media.github.stalk}` )","meta":{"src":{"root":"","dir":"pages","base":"index.pug","ext":".pug","name":"index","subdir":""},"md5":"4187a39f10db9c8e3d233236bdf273e8","sha384":"13NoHA/UDcp+N1hCpqOIKEDmF7dQWnHDskLPygdH0iYlX5YMWySeHPO/wy3R3AIj","mtime":"2017-12-08T11:23:28.507Z","birthtime":"2017-08-16T17:47:31.647Z","thumbnail":null,"permalink":"/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":2251799813710080,"size":2144,"atimeMs":1512659073910,"mtimeMs":1512732208506.6318,"ctimeMs":1512732208506.6318,"birthtimeMs":1502905651647.0088,"atime":"2017-12-07T15:04:33.910Z","mtime":"2017-12-08T11:23:28.507Z","ctime":"2017-12-08T11:23:28.507Z","birthtime":"2017-08-16T17:47:31.647Z"}},{"attributes":{"title":"default.jsonの書き方","description":"どんなサイトビルダーでも、設定ファイルは必須です。情報の変数化は楽をするための第一歩です。","layout":"article","published":true,"draft":false},"body":"\n## 使い方\n\n`.config`フォルダ内にjson形式で格納されます。\n\n`default.json`と`own.json`は同じ形式で、`site`変数として処理中に取り出すことができます。\n\n`debug_override.json`は、デバッグやテストの際に`site`変数に上書きするための情報です。\n\n`messages.json`は、ビルドの際のメッセージが格納されています。\n\nあとはフィーリングで。バージョンが変わると構造に破壊的な変更が加わる可能性がありますが、ご了承ください。","meta":{"src":{"root":"","dir":"pages/maqz","base":"configulation.md","ext":".md","name":"configulation","subdir":"maqz"},"md5":"e90a84081728f26b38fdcca9346e58b3","sha384":"kwE4CnKicInsj1IFXqb0cKncn0yVPSPSqdy0Ren6l1d2Cs7p/A3R0r2Il8BKwo2s","mtime":"2017-12-04T13:29:16.769Z","birthtime":"2017-08-16T19:43:12.118Z","thumbnail":null,"permalink":"/maqz/configulation/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":3096224743852012,"size":776,"atimeMs":1502912592118,"mtimeMs":1512394156769.2551,"ctimeMs":1512394156769.2551,"birthtimeMs":1502912592118.3513,"atime":"2017-08-16T19:43:12.118Z","mtime":"2017-12-04T13:29:16.769Z","ctime":"2017-12-04T13:29:16.769Z","birthtime":"2017-08-16T19:43:12.118Z"}},{"attributes":{"title":"文書の書き方","description":"難しいことはありません。jekyllと同じだし。markdownだけでなく、pugやejsを利用することもできます。","layout":"article","published":true,"draft":false},"body":"\nMarkdownかPugで書くことができます。難しいことはありません。難しいことを極力しないように作ったのですから。\n\nMarkdownに関して言えば、扱い方は**jekyllと全く同じ**と言っていいでしょう。\n\nまた、PugもMarkdownとそんなに変わりありません。ただし、凝った装飾をするには、テンプレートを弄っていく必要が出てくるでしょう。\n\nちなみにPugは`md:`でMarkdownで書き始められます。\n\n## 雛形\n\n### Markdown\n\n```markdown\n---\ntitle: タイトル\ndescription: 説明\nlayout: default\n# permalink: hoge/foooo\n---\n# タイトル\n\n本文\n\nkramdownでhtmlに変換します！\n\n```\n\n### Pug\n\n```pug\n---\ntitle: タイトル\ndescription: 説明\nlayout: default\n# permalink: hoge/foooo\n---\nh1 #{page.attributes.title}\np #{page.attribute.description}\np page.attributeからFront Matterの設定値を参照できます!\np docs/info.jsonの内容を全て参照できます。記事一覧を作ったり、サイトの情報を変数に置き換えられます。\n```\n\n## 簡単な説明\n\n`---～---`をFront Matterと呼びます。YML形式で情報を書いてもらうことで、情報を的確にテンプレートに流し込めます。\n- layoutの設定値は`theme/pug/templates`のpugファイルの名前と一致します。\n  * 書かれていなかったり一致しなかった場合、`default.pug`を利用します。\n- permalinkは、強制的にURLを変更します。末尾にスラッシュがあると正しく機能しません。\n- pugからは、[テンプレート](./templates#theme)と同じように`docs/info.json`の内容を利用できます。\n\n## 画像を挿入する\n\n### Markdownの場合\n\n通常通り、`![説明](URL)`と書きます。\n\nURLは、事故を防ぐために、スラッシュから始めて書くことをお勧めします。\n\nただし、スラッシュから始めると、ドメインのすぐ次からのURLを書く必要があります。\n\n例えば、サイトのトップページが`https://tmin.xyz/docs`で、`files/image.png`という画像を挿入する場合、`/docs/files/image.png`と書くとよいです。\n\nたぶん将来VS Codeの画面にドラッグ・アンド・ドロップすれば自動で挿入してくれる拡張機能を誰か作ってくれると思う。\n\n### pugの場合\n\n`${site.site_url}`を利用します。サイトのURLの変化にも対応できます。\n\n例えば、`files/image.png`という画像を挿入する場合、~a(href=`${site.site_url}/files/image.png`~と書くとよいです。","meta":{"src":{"root":"","dir":"pages/maqz","base":"howtowrite.md","ext":".md","name":"howtowrite","subdir":"maqz"},"md5":"4ab9fb5757e0c740caf154cac5427f40","sha384":"LWBcQw2J7Di+P0+eaOqeirwfCkS+XfZpAmRGMq6+Abib1agvzod3/ftxgt046F/Z","mtime":"2017-11-26T13:10:34.306Z","birthtime":"2017-08-17T20:11:52.499Z","thumbnail":null,"permalink":"/maqz/howtowrite/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":14355223812270612,"size":2885,"atimeMs":1503000712498.8123,"mtimeMs":1511701834306.0586,"ctimeMs":1511701834306.0586,"birthtimeMs":1503000712498.8123,"atime":"2017-08-17T20:11:52.499Z","mtime":"2017-11-26T13:10:34.306Z","ctime":"2017-11-26T13:10:34.306Z","birthtime":"2017-08-17T20:11:52.499Z"}},{"attributes":{"title":"maqz","description":"静的サイトビルダー「maqz」についてです。Jekyll以上Hugo以下といったところ。テーマの少なさが難点。","layout":"article","published":true,"draft":false},"body":"\n## 今のサイト作成に満足していますか？\n\nwixやはてな、fc2を利用すれば簡単に素晴らしいサイトやブログを作成できます。\n\nしかし、例えばイベントやWiki等、大量のデータを公開したいときもあります。\n\nmaqzは、既存のパッケージを組み合わせたWebサイトビルドシステムです。  \n何も特別なものはありません。このシステム自体はプログラミングに堪能な人ならば簡単に構築できるものです。  \n\nつまりmaqzはいわゆる提案です。\n\nmaqzのシステムは、Wikiやブログを簡単に作成するのに最も適しています。  \nそれは、maqzがディレクトリ・ファイルの構造をデータベースとして扱い、JavaScriptにより簡単に操作できるからです。  \nES6によって強化された配列操作を利用すれば、目次や記事のコピー・ペースト作業はなくなります。\n\n文書の生成のほかにも、スタイル・スクリプト・画像の最適化を同時に行うことができます。\n\n**最強の自分だけのサイトを作りましょう!**\n\n## 概要\n\nオレオレ静的サイトビルダーです。\n\nmarkdown(パースにKramDownを利用)やpug、htmlを読み込んで、テンプレートに適用し、サイトを出力します。ビルドにはタスク管理ツールgulpを利用しています。\n\n~~つまり大して自分でコードは書いてないです。~~\n\n[GitHub](https://github.com/tamaina/tamaina.github.io)\n\n**編集にはVisual Studio Code等のIDEを利用することをお勧めします。**\n\n## 説明書\n\n- **[default.jsonの書き方](configulation)**\n- **[文書の書き方](howtowrite)**\n- **[ページ情報の使い方](pages)**\n- **[テーマについて](theme)**\n\n## 機能\n\n- pjaxが標準で適用されています。\n- PWAに対応しているかもしれません。\n  * manifest.jsonを勝手に出力します。\n  * Workboxを用いて、Service Workerの自動更新に対応しています。\n- AMPにも対応しています。\n  * ブログはAMPでも配信されています。\n- Webpack + babel + uglifyでページ用スクリプトを近代的に製作できます。\n\n## インストール\n\n1. node.jsをインストールしてください。\n2. \n```\nnpm install -g node-gyp\nnpm install -g gulp-cli\nnpm install\n```\n\n3. サイトを公開するなら**.config/default.json****.config/own.json**を編集してください。\n\n## 文書を作成する\n\n```\ngulp new --path foo/hoge.md --layout default\n```\n→`pages/foo/hoge.md`が作成され、(インストールされていれば)Visual Studio Codeが開き、編集できるようになります。\n\n- `--path`は必須です。`pages/`以下に入力したとおりのファイルが作成されます。\n- `--layout`は`templates/`フォルダ内のmdファイルの名前を指定します。\n  * 指定した雛形がコピーされます。\n  * 指定しなければ`default`になります。\n  * テンプレートの拡張子は.mdのみです。\n\n`gulpfile.js`の一番初めの以下のコードを編集すると、実行時に開くエディタを指定できます。  \nシェルで実行可能なプログラム名を指定してください。\n\n```\nconst openCommand = \"code\"\n```\n\n**テキストエディタの例**\n\n- `code` … Visual Studio Code (初期値)\n- `code-insider` … Visual Studio Code Insider\n- `notepad` … メモ帳(Windows)\n- `TextEdit` … テキストエディット(macOS).\n- `nano` … nano\n- `code-insiders` … Visual Studio Code - insiders\n\n## ビルド\n\n### ただビルドする\n\n```\ngulp prebuild-files\ngulp default\n```\n\n- `filesPrebuilt`タスクは、画像の圧縮をしながら`files/`フォルダ内の内容を準備します。\n  * 重い画像圧縮タスクを分離したため、このような形になっています。\n  * `files/`フォルダ内に変更を加えたら、必ず実行してください。\n- \n\n### ブラウザで確認してみる\n\n**この機能は現在作成中なので、動作しません。**ご不便をおかけします。\n\n```\ngulp server\n```\n\n正常にビルドできれば、`localhost:3000`に接続すると見ることができます。\n\nこのとき、debug_override.jsonの内容がdefault.jsonに上書きされます。\n\n文書やテンプレートを更新すると、その都度ビルドし直します。\n\n## 公開\n\n**Service Workerの動作には、httpsが必須です。**\n\nサイトを公開するなら**.config/default.json**及び**.config/own.json**を自分用に編集してください。\n\nそしてビルドして、`docs/`以下を公開します。\n\nGitHub Pagesを利用すれば無料で公開できますし、PHPを利用していないので一切のコードが利用できない無料サーバーでも利用することができます。\n\n## ファイル\n\n```\n│ \n│\n├─.config/default.json - サイトの大体の設定はここで行います。\n├─────────────   pages - 基本的に文書はすべてここに格納します。\n├─────────────   files - 添付ファイルはここに格納します。\n│\n├─── dist  ┐\n│          └─files ┐   - grunt filesPrebuilt の結果がここに入ります。\n│                  │     grunt default の度にこの内容がコピーされます。\n│\n├─── theme ┐           - スタイルやレイアウト、スクリプトが格納されています。\n│          │\n│          ├─  pug ┐   - htmlの素となるpugが保存されています。\n│          │       │\n│          │       ├── templates - レイアウトが格納されています。\n│          │       │               default.pugを消してはいけません。\n│          │       ├──     temp  - ビルドの際中間生成されるpugが格納されます。\n│          │       └── includes  - 細かいファイルが格納されています。\n│          │\n│          ├─ styl ┐   - cssの素となるstylusが保存されています。\n│          │\n│          ├─ fonts┐   - サブセット前のフォントを格納しています。\n│          │\n│          ├─  js  ┐   - jsファイルが保存されています。\n│          │       │\n│          │       ├── main.js   - このファイルで一旦jsファイルを纏めています。\n│          │       │               これをbrowserifyとuglifyに通してjsファイルを生成します。\n│          │\n│          └─ static ┐ - 変更が要らない静的なファイルを格納するフォルダです。\n│                    │   ビルド時にdocs/にそのままコピーされます。\n│                    │\n│\n├─── docs  ┐           - 出来上がったサイトです。このファイル公開してください。\n│          │             GitHub Pagesでは、設定でここをサイトにできます。\n│          │             ※ただし、ユーザーページでは不可\n│          │             ビルドするごとに内容は消去されます。\n│          │\n│          ├─ assets ┐   - theme/static/からのコピーとビルドしたcss/jsを格納します。\n│          │         │\n│          ├─  files ┐   - files/はここにコピーされます。\n│          │         │     .htaccessで制御を別に分けるときにとくに便利です。\n│\n├─── templates ┐         - grunt newのとき雛形として読みこまれます。\n│              │\n│              ├ default.md - 消してはいけません。\n│              ├ hoge.md    - 雛形は自分で自由に追加できます。\n│\n├────────   .gitignore  ┐\n├──────    .travis.yml  │\n├──────    gulpfile.js  │\n├─────────     LICENSE  │  配布に際して必要なファイルです。\n├─────    package.json  │\n├─   package-lock.json  │\n├────    pugfilters.js  ┘\n├──  webpack.config.js   - webpack設定ファイル。\n├────────   index.html  ┐  GitHub Pagesのユーザーページがmasterしか参照できない仕様\n│────────     404.html  ┘  のためdocs/にリダイレクトします。\n└────────    readme.md   - サイトと併せてお読みください。\n```\n","meta":{"src":{"root":"","dir":"pages/maqz","base":"index.md","ext":".md","name":"index","subdir":"maqz"},"md5":"74a59da6effc6a98e91540268b374960","sha384":"WK15Cln1D5d6+ocbloighpa2NTlIs46PN1tVzBbWr51mPjuHgCM7xi2O4FGewaQW","mtime":"2017-12-08T14:38:42.542Z","birthtime":"2017-08-17T19:22:33.335Z","thumbnail":null,"permalink":"/maqz/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":5066549580819059,"size":8967,"atimeMs":1512743900264,"mtimeMs":1512743922542.0264,"ctimeMs":1512743922542.0264,"birthtimeMs":1502997753334.8596,"atime":"2017-12-08T14:38:20.264Z","mtime":"2017-12-08T14:38:42.542Z","ctime":"2017-12-08T14:38:42.542Z","birthtime":"2017-08-17T19:22:33.335Z"}},{"attributes":{"title":"pages処理チートシート","description":"ページ配列 pagesの処理方法をかんたんにまとめました。","layout":"article","published":true,"draft":false},"body":"\n## `pages`マップと要素(page)\n\n`info.json`でjson化したデータを見ることができます。\n\n便宜上pagesの各要素をpageと呼びます。\n\n**これらの情報はビルド前に決定されます**ので、ビルド後のhtmlの情報は一切含まれていません。すべては`pages`フォルダ内のファイルから得られた情報です。\n\n```json\n{\n    \"pages\": [\n        {\n            \"meta\": {\n                \"src\": {\n                    \"root\": \"\",\n                    \"dir\": \"pages/foo/bar\",\n                    \"base\": \"hoge.md\",\n                    \"ext\": \".md\",\n                    \"name\": \"hoge\",\n                    \"subdir\": \"foo/bar\"\n                },\n                \"md5\": \"16373b01c4af2da0986dbdf1c0b413b4\",\n                \"sha384\": \"OAZAV1YnEdrl6phd0dJT1rFBgkKTe3rYhCEbccJV4nzcrm/xoS5SN2OmfjsZkTZk\",\n                \"mtime\": \"2100-12-26T09:13:20.778Z\",\n                \"birthtime\": \"2017-08-18T19:35:21.010Z\",\n                \"permalink\": \"/foo/bar/hoge/\"\n            },\n            \"attributes\": {\n                \"title\": \"ほげほげ\",\n                \"description\": \"ほげほげ、ふー、ばー！何か概要を書くよ！\",\n                \"layout\": \"article\",\n                \"date\": \"2100-12-26T09:13:20.778Z\",\n                \"published\": \"true\"\n            },\n            \"body\": \"MARKDOWNの例\\n\\n## 見出し！ \\n\\n本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文\",\n            \"stats\": {\n                \"dev\": 3807904075,\n                \"mode\": 33206,\n                \"nlink\": 1,\n                \"uid\": 0,\n                \"gid\": 0,\n                \"rdev\": 0,\n                \"ino\": 2814749767140380,\n                \"size\": 235,\n                \"atimeMs\": 1503084921010,\n                \"mtimeMs\": 1508516542000.563,\n                \"ctimeMs\": 1508516542000.563,\n                \"birthtimeMs\": 1503084921010.212,\n                \"atime\": \"2017-08-18T19:35:21.010Z\",\n                \"mtime\": \"2017-10-20T16:22:22.001Z\",\n                \"ctime\": \"2017-10-20T16:22:22.001Z\",\n                \"birthtime\": \"2017-08-18T19:35:21.010Z\"\n            }\n        }\n    ]\n}\n```\n\n### `.meta`\n\nmetaにはビルド時に必要と思われる情報をまとめて記述しています。attributesとstatsのどちらかを選択したり、ソースの情報が挿入されたりしています。\n\n頻繁に利用する配列といえます。\n\n#### `.meta.src`, `.meta.src.subdir`\n\n`meta.src`にはnode.jsの[path.parse()](https://nodejs.org/api/path.html#path_path_parse_path)で得られた情報が格納されます。\n\nさらに、\n\n#### `.meta.md5`, `.meta.sha384`\n\n`body`の内容を各ハッシュ値にしてあります。\n\n#### `.meta.mtime`, `.meta.birthtime`\n\n`mtime`は更新日時、`birthtime`は作成日時が挿入されています。\n\n通常は`stats`の値がそのまま挿入されますが、yaml front-matterで各値を書き換えるとここに反映されます。\n\n#### `.meta.premalink`\n\n必ず`/`から始まり`/`で終わるリンクが格納されています。\n\n### `.attributes`\n\n`frontmatter`が加工されたマップです。npmパッケージ「front-matter」が生成します。\n\n### `.body`\n\nnpmパッケージ「front-matter」によってソースファイルのfront-matterと本文が分離し、本文のみ挿入されています。\n\n元ファイルの開業コードがCR+LFであっても、JavaScriptで処理する限り不要であるため\\rは消去されます。\n\n### `.stats`\n\n[node.jsのfs.Stats](https://nodejs.org/api/fs.html#fs_class_fs_stats)がそのまま格納されます。\n\n## pages配列の使い方の例\n\njson形式ですので、javascriptで配列として様々な加工をすることができます。\n\n基本的にはpugで処理する形になりますが、他のテンプレートエンジンでももちろん大丈夫です。\n\n### ディレクトリ以下を羅列する\n\n→ソースの`pages/blog/index.pug`をお読みください。\n\n### 更新日時が前のページ・次のページを表示する\n\n→ソースの`theme/pug/blog.pug`をお読みください。","meta":{"src":{"root":"","dir":"pages/maqz","base":"pages.md","ext":".md","name":"pages","subdir":"maqz"},"md5":"5d49df5b387b54ae793fad47355bb5b9","sha384":"xqA1DMptL1A1CtKT/vODOfvZ34XTlAoxp5Yf6XV5iVF3bTBerQvvtWGi6F7mGged","mtime":"2017-12-07T12:25:19.503Z","birthtime":"2017-10-29T03:36:04.247Z","thumbnail":null,"permalink":"/maqz/pages/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":16044073672539884,"size":4454,"atimeMs":1512649519503,"mtimeMs":1512649519503,"ctimeMs":1512649519503.821,"birthtimeMs":1509248164246.5952,"atime":"2017-12-07T12:25:19.503Z","mtime":"2017-12-07T12:25:19.503Z","ctime":"2017-12-07T12:25:19.504Z","birthtime":"2017-10-29T03:36:04.247Z"}},{"attributes":{"title":"テーマ","description":"テーマの編集方法。pug, scss, webpackを駆使して最強・最速のテーマを作りましょう。","layout":"article","published":true,"draft":false},"body":"\nテーマファイルのソースは、themeフォルダに格納されています。\n\nhtmlの素のpugを**テンプレート**、cssの素のscss(.sass)やcssファイルを**スタイル**と呼称します。\n\nまた、jsフォルダのjsファイルはスクリプトと呼称します。ビルド時に実行されるビルドスクリプトとは区別してください。\n\n## テンプレート\n\n各文書のFront Matterの、layout:の値が、適用するテンプレートのファイル名です。\n\n何も指定がなければdefault.pugを読みます。\n\n### 書き方\n\npugの書き方に関しては、[pugjs.org](https://pugjs.org)を参照してください。\n\n変数として`docs/info.json`の内容が利用可能です。[様々な配列操作](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array)を利用してページ一覧や検索機能を作成できます。  \nすべてのページの情報が記されているpages配列の扱い方は**[pagesチートシート](./pages)**を参照してください。\n\nこれは、テンプレートだけでなくpug形式の個々の文書でも利用できます。\n\nさらに他になにか利用したい変数がある場合は、`Gruntfile.js`のオプションに書き足してください。\n\n### テンプレートからページを書き出すしくみ\n\nビルドの様子をよく見ているとわかりますが、一時ファイルが`pug/templates`以下に書き出されます。\n\n一時ファイルの中を見てみると秘密がわかると思います。\n\n### ビルド時に実行されるスクリプト\n\nビルドスクリプトは`theme/pug/includes/script.pug`に記述されています。\n\n読みこまれた文書はいくつかの関数を通してhtmlになります。\n\n以下の関数は、カスタマイズする際に特に必要となる関数です。\n\n#### `md_better()`\n\nMarkdownから変換されたHTMLを整形します。String.replace()を多用しています。\n\n#### `getTL()`\n\nHTMLに変換した文書をテンプレートリテラルとして扱い、`${～}`で囲まれた変数値や計算値を代入します。  \nMarkdownでちょっとした変数を代入する場合に役立ちます。`info.json`の内容はすべて表示できます。\n\n省力化のため、この関数には**あのeval()関数を利用**しています。大丈夫です。変な処理を${～}に書いたり変な`を書いたりしなければ。多分。\n\nこの関数を適用しているときに`${～}`という文字列を表示させるには、&#036;を`\\$`と書くか`&amp;#036;`と書くとよいのではないでしょうか。\n\n不具合を防ぐために、テンプレートごとに有効か無効かを切り替えるとよいでしょう。  \nまた、文書内で関数・条件式・繰り返し等複雑な処理をしたい場合は、pugの利用を強くお勧めします。\n\n## スタイル\n\n`main.sass`ファイルをコンパイルしてcssを出力しています。\n\ncssやsassを追加するには、どこかにcss/sassファイルを作成・コピーし、それに応じて`@import`をmain.sassに追加します。\n\n当該ファイルを見ればなんとなくわかります。\n \n## スクリプト\n\n**クライアント側で処理するスクリプトファイルです。**\n\nmaqzの趣向としては、極力ビルド時にhtmlの簡単な変更や値の代入は済ませるようにしてください。\n\nmain.jsを起点としてwebpackでまとめます。\n\npjax-apiスクリプトは別に読み込んでいます。\n","meta":{"src":{"root":"","dir":"pages/maqz","base":"theme.md","ext":".md","name":"theme","subdir":"maqz"},"md5":"8796958306bb1f67ff5150f0194daa90","sha384":"HRg93DTIqAo6/iEiy30gnbnzGETiVDloylzxcVNG4L1iYIk8bEDLlUoO2jW/rhuf","mtime":"2017-11-26T13:13:52.536Z","birthtime":"2017-08-18T18:37:57.811Z","thumbnail":null,"permalink":"/maqz/theme/"},"stats":{"dev":3807904075,"mode":33206,"nlink":1,"uid":0,"gid":0,"rdev":0,"ino":21673573206747496,"size":3853,"atimeMs":1503081477811.0002,"mtimeMs":1511702032535.6545,"ctimeMs":1511702032535.6545,"birthtimeMs":1503081477811.2764,"atime":"2017-08-18T18:37:57.811Z","mtime":"2017-11-26T13:13:52.536Z","ctime":"2017-11-26T13:13:52.536Z","birthtime":"2017-08-18T18:37:57.811Z"}}]}