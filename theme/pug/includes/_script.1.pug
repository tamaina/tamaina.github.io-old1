//- javascript
-
  const page = pages[page_index_numer]
  const pug_api = require("pug")
  const htmlmin = require("html-minifier").minify
  const kramed = require("kramed")
  // const hljs = require('highlight.js')
  let main_html

  function md_better(body){
    /*
    //- headingにpt-5を指定
    body = body.replace(/<h([2-6])(.*?)>/gi,"<h$1 class=\"pt-5\"$2>")

    //- https?のつくa要素に
    body = body.replace(/<a href=\"(https?:)\/\/(.*?)\">(.*?)<\/a>/gi,"<a href=\"$1\/\/$2\" target='_blank' rel='noopener'>$3<i class=\"fa fa-external-link fa-fw\" aria-hidden=\"true\"></i><\/a>")

    //- "/"から始まる画像srcはその前にsite.url.pathを付加、およびimg-fluid付加
    body = body.replace(/<img(.*?)src=\"\/(.*?)\"(.*?)>/gi,"<img$1src=\"" + site.url.path + "\/$2\"$3 class=\"img-fluid\">")*/
    return body
  }

//- make main html
case page.srcext
  when '.md'
    - main_html = htmlmin(md_better(kramed(page.body)),{"collapseWhitespace": true,"removeEmptyAttributes": true,"removeEmptyElements": true})
  when '.html'
  when '.htm'
    - main_html = htmlmin(page.body,{"collapseWhitespace": true,"removeEmptyAttributes": true,"removeEmptyElements": true})
  when '.pug'
    -
      let locals = {"site": site,"pages": pages,"page": page,"package": package,"option": option}
      let fn = pug_api.compile(page.body,{filters:require('./pugfilters.js')})
      main_html = fn(locals)

//-
  main_html = main_html.replace(/<pre><code>(.*?)<\/code><\/pre>/gi,function(a,b){
    console.log("コード検出")
    console.log(b)
    // let result = hljs.highlightAuto(b)
    // return '<pre><code class="hljs ' + result.language + '">' + result.value + '</code></pre>'
  })
  main_html = main_html.replace(/<pre><code class="lang-(.*?)">(.*?)<\/code><\/pre>/gi,function(a,b,c){
    console.log("コード検出")
    console.log(b + '\n' + c)
    // let result = hljs.highlightAuto(c)
    // return '<pre><code class="hljs ' + result.language + '">' + result.value + '</code></pre>'
  })

-
  let heading_html, headings = []
  while((heading_html = /<h([1-6])(.*?)>([^]*?)<\/h(\1)>/gi.exec(main_html)) !== null){
    let heading = {},
        idmatch = []
    idmatch = heading_html[2].match(/id=(["'])(.*?)(\1)/)
    if(idmatch == null)
      heading.id = null
    else
      heading.id = idmatch[2]
    heading.html     = heading_html[0]
    heading.number   = heading_html[1]
    heading.attr     = heading_html[2]
    heading.text     = heading_html[3]
    headings.push(heading)
  }