link(rel="manifest" href=`${site.url.path}/manifest.json`)

style
  include ../../../dist/style.min.css
link(href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css", rel="stylesheet", crossorigin="anonymous")
link(href="https://cdn.jsdelivr.net/npm/yakuhanjp/dist/css/yakuhanjp.min.css", rel="stylesheet", crossorigin="anonymous")

script
  include ../../../dist/main.min.js
script
  include ../../../node_modules/pjax-api/dist/pjax-api.min.js
script
  include:uglify-js ../../js/imports/pjax-init.js
script
  include:uglify-js ../../js/imports/fab.js

script.pjax-reload
  :uglify-js
    var disqus_config = function () {
      this.page.url = "#{site.url.scheme}://#{site.url.host}#{site.url.path}#{page.meta.permalink}";
      this.page.identifier = "#{site.url.host}#{site.url.path}#{page.meta.permalink}"; };
    // twbs/bootstrap build/sw.jsより借用
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('#{site.url.scheme}://#{site.url.host}#{site.url.path}/service_worker.js').then(function(registration) {
        console.log('Service Workerは正常に登録されました: ', registration.scope);
          registration.onupdatefound = function () {
          var installingWorker = registration.installing
          installingWorker.onstatechange = function () {
            switch (installingWorker.state) {
              case 'installed':
                if (navigator.serviceWorker.controller) {
                  console.log('ページの更新があります……')
                  location.reload(true) }
                break
              default:
        } } }
      }).catch(function(err) {
        console.log('Service Workerを登録できませんでした: ', err);
      });
    }
    // twbs/bootstrap build/sw.jsより借用