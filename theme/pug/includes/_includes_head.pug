link(rel="manifest" href=`${site.url.path}/manifest.json`)

link(href=`${site.url.path}/assets/style.min.css`, rel="stylesheet")
link(href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css", rel="stylesheet", crossorigin="anonymous")
link(href="https://cdn.jsdelivr.net/npm/yakuhanjp/dist/css/yakuhanjp.min.css", rel="stylesheet", crossorigin="anonymous")

script(src=`${site.url.path}/assets/main.min.js` defer)
script(src=`${site.url.path}/assets/pjax-api.min.js` defer)
script(src=`${site.url.path}/assets/pjax-init.js` defer)

| <script class='pjax-reload'>
|   var disqus_config = function () {
|     this.page.url = "#{site.url.scheme}://#{site.url.host}#{site.url.path}#{page.meta.permalink}";
|     this.page.identifier = "#{site.url.host}#{site.url.path}#{page.meta.permalink}";
|   };
|  // twbs/bootstrap build/sw.jsより借用
|   if ('serviceWorker' in navigator) {
|     navigator.serviceWorker.register('#{site.url.scheme}://#{site.url.host}#{site.url.path}/service_worker.js').then(function(registration) {
|       console.log('Service Workerは正常に登録されました: ', registration.scope);
|         registration.onupdatefound = function () {
|         var installingWorker = registration.installing
|         installingWorker.onstatechange = function () {
|           switch (installingWorker.state) {
|             case 'installed':
|               if (navigator.serviceWorker.controller) {
|                 console.log('ページの更新があります……')
|                 location.reload(true)
|               }
|               break
|             default:
|           }
|         }
|       }
|     }).catch(function(err) {
|       console.log('Service Workerを登録できませんでした: ', err);
|     });
|   }
| // twbs/bootstrap build/sw.jsより借用
| </script>