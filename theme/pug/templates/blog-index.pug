extends ../templates/default.pug

append preset
  - 
    const indexPrefix = "blog"
    const indexname = "ブログ"
    const indexHeadline = "記事一覧"
  -
    pages.sort(function(a,b) {
      if( a.meta.birthtime < b.meta.birthtime ) { return 1 } else { return -1 }
    });

    let queries = [], qpages = []

    // 「${indexname}」として表示するページの条件を指定し、Array.filter()関数でqpagesに代入します。

    qpages = pages.filter(e => e.meta.permalink.indexOf(`/${indexPrefix}/`) == 0 // パーマリンクの先頭が"/blog/"
                            && e.attributes.layout == indexPrefix           // blogレイアウトが適用されている
                            && e.attributes.draft != true              // 
                            && e.attributes.published == true
                          )

    function addQuery(q, n){
      if( typeof q === "string" ){ queries.push( {"type": n, "query": q} ) }
      else if( typeof q === "object" && Array.isArray(q) ){
        for( c = 0; c < q.length; c++ ){
          queries.push( {"type": n, "query": q[c]} )
        }
      }
    }

    if( page.attributes.query ) {

      // front-matter のquery設定があれば適用します

      function pathFilter(q, qpages){
        return qpages.filter(function(e,i,a){
          if( typeof q === "string" ){
            return e.meta.permalink.indexOf(`/${indexPrefix}/${q}/`) == 0
          } else if (typeof q === "object" && Array.isArray(q) ){
            for( c = 0; c < q.length; c++ ){
              if( e.meta.permalink.indexOf(`/${indexPrefix}/${q[c]}/`) == 0 ) return true
            }
          }
        })
      }

      if( page.attributes.query.path ) qpages = pathFilter(page.attributes.query.path, qpages)
      if( page.attributes.query.directory ) qpages = pathFilter(page.attributes.query.directory, qpages)
      if( page.attributes.query.directories ) qpages = pathFilter(page.attributes.query.directories, qpages)
      
      if( page.attributes.query.category ) addQuery( page.attributes.query.category, "categories" )
      if( page.attributes.query.categories ) addQuery( page.attributes.query.categories, "categories" )
      if( page.attributes.query.tag ) addQuery( page.attributes.query.tag, "tags" )
      if( page.attributes.query.tags ) addQuery( page.attributes.query.tags, "tags" )

      if(queries != []){
        qpages = qpages.filter(function(e,i,a){
          for( m = 0; m < queries.length; m++ ){
            if( !!e.attributes[queries[m].type] ){ if( e.attributes[queries[m].type].find(f => f === queries[m].query ) !== undefined ) { return true } }
          }
        })
      }

    }
  -
    // 見出しを設定します。
    let headline = ""
    let types = { "tags": "タグ", "categories": "カテゴリー" }
    if( !page.attributes.query ){
      headline = indexHeadline
    } else {
      headline = indexHeadline + " "
      for( r = 0; r < queries.length; r++ ){
        headline += `${headline}${types[queries[r].type]}:${queries[r].query}･`
      }
      headline = headline.slice(0,-1)
    }

block title
  if (page.attributes.title)
    title #{page.attributes.title} - #{site.name}
  else
    title #{indexname} #{headline} - #{site.name}

block main

  #main.container
    h1.pt-4.pb-2 ブログ
    div
      != getTL(main_html)
    h2.font-weight-light.h3= headline

    .d-flex.flex-row.row
      each thispage in qpages
        a(href=`${site.url.path}${thispage.meta.permalink}`).col-xl-4.col-md-6.p-2.text-dark
          article.card.w-100.h-100.border.bg-light.pb-5
            if ( thispage.attributes.thumbnail )
              img.card-img-top.blog-indexthumb(alt="サムネイル", src=`${site.url.path}${thispage.attributes.thumbnail}`)
            h4.card-title.blog-title.mb-2.mt-3.px-3 #{thispage.attributes.title}
            p.card-text.mb-5.px-3 #{thispage.attributes.description}
            - let birthtime = new Date(thispage.meta.birthtime)
            - let mtime = new Date(thispage.meta.mtime)
            footer.card-footer.py-md-2.py-1.border-light.bg-white
              small
                ul.list-unstyled.mb-1
                  li
                    +fa("file-text-o")
                    time(datetime=thispage.meta.birthtime) #{birthtime.getFullYear()}年#{birthtime.getMonth()+1}月#{birthtime.getDate()}日 #{`00${birthtime.getHours()}`.slice(-2)}:#{`00${birthtime.getMinutes()}`.slice(-2)}
                    |  作成
                  li
                    +fa("clock-o")
                    time(datetime=thispage.meta.mtime) #{mtime.getFullYear()}年#{mtime.getMonth()+1}月#{mtime.getDate()}日 #{`00${mtime.getHours()}`.slice(-2)}:#{`00${mtime.getMinutes()}`.slice(-2)}
                    |  更新
                p.mb-0
                  +fa("folder-open")
                  if(thispage.attributes.categories)
                    each category in thispage.attributes.categories
                      span.badge.badge-success= category
                      |  
                  else
                    | なし
                  | &emsp;
                  +fa("tags")
                  if(thispage.attributes.tags)
                    each tag in thispage.attributes.tags
                      span.badge.badge-secondary= tag
                      |  
                  else
                    | なし